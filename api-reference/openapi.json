{
  "openapi": "3.0.1",
  "info": {
    "title": "Hamsa API",
    "description": "Trying out our transcription and media-to-text APIs",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.tryhamsa.com"
    }
  ],
  "paths": {
    "/api/v1/user/signup": {
      "post": {
        "summary": "Sign up a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "409": {
            "description": "User alreader exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/sign-in": {
      "post": {
        "summary": "Login to your account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NormalSignInRequest"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleSignInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginInvalidEmailOrPasswordError"
                }
              }
            }
          },
          "401": {
            "description": "Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginMismatchPasswordError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/refresh-tokens": {
      "post": {
        "summary": "Refresh Access Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokensRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokensResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/verify-register": {
      "post": {
        "summary": "Verify User Registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyRegisterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project": {
      "post": {
        "summary": "Create a new project",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user projects",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProjectsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a project",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWithCountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "400": {
            "description": "Not Found or Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Project Name",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/project/user": {
      "get": {
        "summary": "Get user projects",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Project Member",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWithCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update Project Member Role",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/project/invitation": {
      "post": {
        "summary": "Invite User to Project",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful invitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/project/api-key": {
      "get": {
        "summary": "List API Keys",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "required": false
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful listing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListApiKeysResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create an API Key",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete API Key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteApiKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWithCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/project/statistics/numbers": {
      "get": {
        "summary": "Get project statistics with numbers",
        "parameters": [
          {
            "name": "startPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "endPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/project/statistics/chart": {
      "get": {
        "summary": "Get project statistics chart data",
        "parameters": [
          {
            "name": "startPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "endPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SignupRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the user!",
            "type": "string"
          },
          "password": {
            "description": "The passowrd of the user!",
            "type": "string"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Is there an error?",
            "type": "boolean"
          },
          "message": {
            "description": "The creation of the account message",
            "type": "string"
          }
        }
      },
      "SignupErrorResponse": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "GoogleSignInRequest": {
        "required": [
          "provider",
          "googleTokenId"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "GOOGLE"
            ]
          },
          "googleTokenId": {
            "type": "string",
            "description": "Google ID token for the user"
          }
        }
      },
      "NormalSignInRequest": {
        "required": [
          "provider",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "NORMAL"
            ]
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the login was successful"
          },
          "tokens": {
            "type": "object",
            "properties": {
              "access": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The access token"
                  },
                  "expires": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date of the access token"
                  }
                }
              },
              "refresh": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The refresh token"
                  },
                  "expires": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date of the refresh token"
                  }
                }
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The user's ID"
              },
              "email": {
                "type": "string",
                "description": "The user's email"
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "The user's phone number"
              },
              "firstName": {
                "type": "string",
                "nullable": true,
                "description": "The user's first name"
              },
              "lastName": {
                "type": "string",
                "nullable": true,
                "description": "The user's last name"
              },
              "fullName": {
                "type": "string",
                "nullable": true,
                "description": "The user's full name"
              },
              "domain": {
                "type": "string",
                "nullable": true,
                "description": "The user's domain"
              },
              "role": {
                "type": "string",
                "description": "The user's role"
              },
              "isBlocked": {
                "type": "boolean",
                "description": "Whether the user is blocked"
              },
              "isActive": {
                "type": "boolean",
                "description": "Whether the user is active"
              },
              "isVerified": {
                "type": "boolean",
                "description": "Whether the user is verified"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date the user was deleted"
              },
              "deletedBy": {
                "type": "string",
                "nullable": true,
                "description": "The user who deleted the user"
              },
              "status": {
                "type": "string",
                "description": "The user's status"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the user was created"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the user was last updated"
              }
            }
          }
        }
      },
      "LoginInvalidEmailOrPasswordError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code"
          },
          "message": {
            "type": "string",
            "description": "The error message"
          }
        }
      },
      "LoginMismatchPasswordError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code"
          },
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "validation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The field that caused the validation error"
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "The validation error message"
                }
              }
            }
          }
        }
      },
      "ErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "VerifyRegisterRequest": {
        "required": [
          "tempToken"
        ],
        "type": "object",
        "properties": {
          "tempToken": {
            "type": "string",
            "description": "Temporary token used to verify registration"
          }
        }
      },
      "VerifyRegisterResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates if there was an error"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      },
      "RefreshTokensRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RefreshTokensResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateProjectRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ProjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updteAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetUserProjectsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GetProjectUsersResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectMember"
                }
              },
              "total": {
                "type": "integer"
              },
              "filtered": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ProjectMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleteBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "isVerified": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "DeleteWithCountResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "UpdateProjectRequest": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The new name of the project"
          }
        }
      },
      "UpdateProjectResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether there was an error"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The project ID"
              },
              "name": {
                "type": "string",
                "description": "The project name"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date the project was deleted"
              },
              "deletedBy": {
                "type": "string",
                "nullable": true,
                "description": "The user who deleted the project"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the project was created"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the project was last updated"
              }
            }
          }
        }
      },
      "InviteUserRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "OWNER"
            ],
            "description": "The role of the user in the project"
          },
          "userEmail": {
            "type": "string",
            "format": "email",
            "description": "The email of the user to be invited"
          }
        },
        "required": [
          "role",
          "userEmail"
        ]
      },
      "InviteUserResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether there was an error"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The invitation ID"
              },
              "userId": {
                "type": "string",
                "description": "The user ID"
              },
              "projectId": {
                "type": "string",
                "description": "The project ID"
              },
              "role": {
                "type": "string",
                "description": "The role of the user in the project"
              },
              "isVerified": {
                "type": "boolean",
                "description": "Whether the invitation has been verified"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date the invitation was deleted"
              },
              "deletedBy": {
                "type": "string",
                "nullable": true,
                "description": "The user who deleted the invitation"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the invitation was created"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the invitation was last updated"
              }
            }
          }
        }
      },
      "DeleteMemberRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "description": "The ID of the member to be deleted"
          }
        },
        "required": [
          "memberId"
        ]
      },
      "UpdateMemberRoleRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "description": "The ID of the member whose role is to be updated"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "OWNER"
            ],
            "description": "The new role of the member"
          }
        },
        "required": [
          "memberId",
          "role"
        ]
      },
      "CreateApiKeyRequest": {
        "type": "object",
        "properties": {
          "expiredAt": {
            "type": "string",
            "format": "date-time",
            "description": "The expiration date of the API key, timestamp in milliseconds"
          },
          "name": {
            "type": "string",
            "description": "The name of the API key"
          }
        },
        "required": [
          "expiredAt",
          "name"
        ]
      },
      "CreateApiKeyResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether there was an error"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The API key ID"
              },
              "expiredAt": {
                "type": "string",
                "format": "date-time",
                "description": "The expiration date of the API key"
              },
              "token": {
                "type": "string",
                "description": "The API key token"
              },
              "userId": {
                "type": "string",
                "description": "The user ID associated with the API key"
              },
              "isValid": {
                "type": "boolean",
                "description": "Whether the API key is valid"
              },
              "status": {
                "type": "string",
                "description": "The status of the API key"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the API key was created"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the API key was last updated"
              }
            }
          }
        }
      },
      "DeleteApiKeyRequest": {
        "type": "object",
        "properties": {
          "apiKeyId": {
            "type": "string",
            "description": "The ID of the API key to be deleted"
          },
          "name": {
            "type": "string",
            "description": "The name of the API key"
          }
        },
        "required": [
          "apiKeyId",
          "name"
        ]
      },
      "ApiKeyDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The API key ID"
          },
          "key": {
            "type": "string",
            "description": "The API key token"
          },
          "name": {
            "type": "string",
            "description": "The name of the API key"
          },
          "userId": {
            "type": "string",
            "description": "The user ID associated with the API key"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "The expiration date of the API key"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the API key was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the API key was last updated"
          }
        }
      },
      "ListApiKeysResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Whether there was an error"
          },
          "data": {
            "type": "object",
            "properties": {
              "apiKeys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiKeyDetails"
                },
                "description": "The list of API keys"
              },
              "total": {
                "type": "integer",
                "description": "The total number of API keys"
              },
              "filtered": {
                "type": "integer",
                "description": "The number of API keys after applying the filters"
              }
            }
          }
        }
      },
      "StatisticsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/StatisticsData"
          }
        }
      },
      "StatisticsData": {
        "type": "object",
        "properties": {
          "requests": {
            "$ref": "#/components/schemas/StatisticItem"
          },
          "transcription": {
            "$ref": "#/components/schemas/StatisticItem"
          },
          "tokens": {
            "$ref": "#/components/schemas/StatisticItem"
          }
        }
      },
      "StatisticItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "integer"
          },
          "isTimeValue": {
            "type": "boolean"
          }
        }
      },
      "ChartResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ChartData"
          }
        }
      },
      "ChartData": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          },
          "transcription": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          }
        }
      },
      "ChartDataItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}