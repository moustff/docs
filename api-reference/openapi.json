{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.tryhamsa.com"
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/user/signup": {
      "post": {
        "summary": "Sign up a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "409": {
            "description": "User alreader exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/sign-in": {
      "post": {
        "summary": "Login to your account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NormalSignInRequest"
                  },
                  {
                    "$ref": "#/components/schemas/GoogleSignInRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginInvalidEmailOrPasswordError"
                }
              }
            }
          },
          "401": {
            "description": "Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginMismatchPasswordError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/refresh-tokens": {
      "post": {
        "summary": "Refresh Access Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokensRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokensResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/verify-register": {
      "post": {
        "summary": "Verify User Registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyRegisterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project": {
      "post": {
        "summary": "Create a new project",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user projects",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProjectsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project/user": {
      "get": {
        "summary": "Get user projects",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SignupRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the user!",
            "type": "string"
          },
          "password": {
            "description": "The passowrd of the user!",
            "type": "string"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Is there an error?",
            "type": "boolean"
          },
          "message": {
            "description": "The creation of the account message",
            "type": "string"
          }
        }
      },
      "SignupErrorResponse": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "GoogleSignInRequest": {
        "required": [
          "provider",
          "googleTokenId"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "GOOGLE"
            ]
          },
          "googleTokenId": {
            "type": "string",
            "description": "Google ID token for the user"
          }
        }
      },
      "NormalSignInRequest": {
        "required": [
          "provider",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "NORMAL"
            ]
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the login was successful"
          },
          "tokens": {
            "type": "object",
            "properties": {
              "access": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The access token"
                  },
                  "expires": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date of the access token"
                  }
                }
              },
              "refresh": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The refresh token"
                  },
                  "expires": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date of the refresh token"
                  }
                }
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The user's ID"
              },
              "email": {
                "type": "string",
                "description": "The user's email"
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "The user's phone number"
              },
              "firstName": {
                "type": "string",
                "nullable": true,
                "description": "The user's first name"
              },
              "lastName": {
                "type": "string",
                "nullable": true,
                "description": "The user's last name"
              },
              "fullName": {
                "type": "string",
                "nullable": true,
                "description": "The user's full name"
              },
              "domain": {
                "type": "string",
                "nullable": true,
                "description": "The user's domain"
              },
              "role": {
                "type": "string",
                "description": "The user's role"
              },
              "isBlocked": {
                "type": "boolean",
                "description": "Whether the user is blocked"
              },
              "isActive": {
                "type": "boolean",
                "description": "Whether the user is active"
              },
              "isVerified": {
                "type": "boolean",
                "description": "Whether the user is verified"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date the user was deleted"
              },
              "deletedBy": {
                "type": "string",
                "nullable": true,
                "description": "The user who deleted the user"
              },
              "status": {
                "type": "string",
                "description": "The user's status"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the user was created"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The date the user was last updated"
              }
            }
          }
        }
      },
      "LoginInvalidEmailOrPasswordError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code"
          },
          "message": {
            "type": "string",
            "description": "The error message"
          }
        }
      },
      "LoginMismatchPasswordError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code"
          },
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "validation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The field that caused the validation error"
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "The validation error message"
                }
              }
            }
          }
        }
      },
      "ErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "VerifyRegisterRequest": {
        "required": [
          "tempToken"
        ],
        "type": "object",
        "properties": {
          "tempToken": {
            "type": "string",
            "description": "Temporary token used to verify registration"
          }
        }
      },
      "VerifyRegisterResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates if there was an error"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      },
      "RefreshTokensRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RefreshTokensResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateProjectRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ProjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updteAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetUserProjectsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GetProjectUsersResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectMember"
                }
              },
              "total": {
                "type": "integer"
              },
              "filtered": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ProjectMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleteBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "isVerified": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}