{
  "openapi": "3.0.1",
  "info": {
    "title": "Hamsa API",
    "description": "Trying out our transcription and media-to-text APIs",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.tryhamsa.com"
    }
  ],
  "paths": {
    "/api/v1/project/statistics/numbers": {
      "get": {
        "summary": "Get project statistics with numbers",
        "parameters": [
          {
            "name": "startPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "endPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v1/project/statistics/chart": {
      "get": {
        "summary": "Get project statistics chart data",
        "parameters": [
          {
            "name": "startPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "endPeriod",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v1/hamsa/transcript": {
      "post": {
        "summary": "Transcribe media to text",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/v1/job/all": {
      "post": {
        "summary": "Get a list of jobs",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "StatisticsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/StatisticsData"
          }
        }
      },
      "StatisticsData": {
        "type": "object",
        "properties": {
          "requests": {
            "$ref": "#/components/schemas/StatisticItem"
          },
          "transcription": {
            "$ref": "#/components/schemas/StatisticItem"
          },
          "tokens": {
            "$ref": "#/components/schemas/StatisticItem"
          }
        }
      },
      "StatisticItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "integer"
          },
          "isTimeValue": {
            "type": "boolean"
          }
        }
      },
      "ChartResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ChartData"
          }
        }
      },
      "ChartData": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          },
          "transcription": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataItem"
            }
          }
        }
      },
      "ChartDataItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "TranscriptRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "jobType": {
            "type": "string",
            "enum": [
              "async"
            ]
          },
          "summary": {
            "type": "boolean"
          },
          "keywordExtraction": {
            "type": "boolean"
          },
          "speakerDZ": {
            "type": "boolean"
          },
          "translation": {
            "type": "string",
            "enum": [
              "ar",
              "en",
              "null"
            ]
          },
          "model": {
            "type": "string",
            "enum": [
              "Hamsa"
            ]
          },
          "webhookUrl": {
            "type": "string",
            "format": "uri"
          },
          "article": {
            "type": "boolean"
          }
        },
        "required": [
          "url",
          "jobType",
          "model",
          "summary",
          "keywordExtraction",
          "speakerDZ",
          "translation",
          "webhookUrl",
          "article"
        ]
      },
      "TranscriptResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "previewUrl": {
            "type": "string",
            "format": "uri"
          },
          "tokenId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "JobsRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/SortOptions"
          },
          "take": {
            "type": "integer",
            "minimum": 1
          },
          "skip": {
            "type": "integer",
            "minimum": 1
          },
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Completed"
            ]
          }
        },
        "required": [
          "sort",
          "take",
          "skip"
        ]
      },
      "SortOptions": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "createdAt",
              "model",
              "jobType",
              "totalCost",
              "usageTime",
              "lng",
              "status"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "required": [
          "field",
          "direction"
        ]
      },
      "JobsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/JobsData"
          }
        }
      },
      "JobsData": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          },
          "total": {
            "type": "integer"
          },
          "filtered": {
            "type": "integer"
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "jobType": {
            "type": "string"
          },
          "summary": {
            "type": "boolean"
          },
          "keywordExtraction": {
            "type": "boolean"
          },
          "speakerDZ": {
            "type": "boolean"
          },
          "translation": {
            "type": "boolean"
          },
          "article": {
            "type": "boolean"
          },
          "webhookUrl": {
            "type": "string"
          },
          "previewUrl": {
            "type": "string"
          },
          "totalCost": {
            "type": "number"
          },
          "usageTime": {
            "type": "string"
          },
          "lng": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "apiKeyId": {
            "type": "string"
          },
          "jobResponse": {
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Pass the API key as a Bearer token in the Authorization header, You need to put Token keyword before the API key. e.g. 'Authorization: Token <api-key>'"
      }
    }
  }
}